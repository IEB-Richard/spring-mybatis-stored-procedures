<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
					"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tk.mybatis.simple.mapper.UserMapper">

	<resultMap id="userMap" type="SysUser">
		<id property="id" column="id" />
		<result property="userName" column="user_name" />
		<result property="userPassword" column="user_password" />
		<result property="userEmail" column="user_email" />
		<result property="userInfo" column="user_info" />
		<result property="headImg" column="head_img" jdbcType="BLOB" />
		<result property="createTime" column="create_time"
			jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="userRoleListMapSelect" extends="userMap"
		type="SysUser">
		<collection 
			property="roleList"
			fetchType="lazy"
			column="{userId=id}"
			select="tk.mybatis.simple.mapper.RoleMapper.selectRoleByUserId">
		</collection>
	</resultMap>
	
	<select id="selectAllUserAndRolesSelect"
		resultMap="userRoleListMapSelect">
		select
			u.id,
			u.user_name,
			u.user_password,
			u.user_email,
			u.user_info,
			u.head_img,
			u.create_time
		from sys_user u
	</select>
	
	<!-- the first stored procedure -->
	<select id="selectUserbyId" statementType="CALLABLE" useCache="false">
		{call select_user_by_id(
			#{id, mode=IN},
			#{userName, mode=OUT, jdbcType=VARCHAR},
			#{userPassword, mode=OUT, jdbcType=VARCHAR},
			#{userEmail, mode=OUT, jdbcType=VARCHAR},
			#{userInfo, mode=OUT, jdbcType=VARCHAR},
			#{headImg, mode=OUT, jdbcType=BLOB, javaType=_byte[]},
			#{createTime, mode=OUT, jdbcType=TIMESTAMP}
		)}
	</select>
	
	<!-- the second stored procedure -->
	<select id="selectUserPage" statementType="CALLABLE" useCache="false" resultMap="userMap">
		{call select_user_page(
			#{userName, mode=IN},
			#{offset, mode=IN},
			#{limit, mode=IN},
			#{total, mode=OUT, jdbcType=BIGINT}
		)}
	</select>
	
	<!-- the third stored procedure -->
	<insert id="insertUserAndRoles" statementType="CALLABLE">
		{call insert_user_and_roles(
			#{user.id, mode=OUT, jdbcType=BIGINT},
			#{user.userName, mode=IN},
			#{user.userPassword, mode=IN},
			#{user.userEmail, mode=IN},
			#{user.userInfo, mode=IN},
			#{user.headImg, mode=IN, jdbcType=BLOB},
			#{user.createTime, mode=OUT, jdbcType=TIMESTAMP},
			#{roleIds, mode=IN}
		)}
	</insert>
	
	<!-- the forth stored procedure -->
	<delete id="deleteUserById" statementType="CALLABLE">
		{call delete_user_by_id(#{id, mode=IN})}
	</delete>

</mapper>